기본적인 웹서버에 대해한 이해를 가지고 간다.
> 클라이언트를 기다리는 상태로 있다가 요청이 들어오면 request와  response로 나누어서 분석후 대답한다.
> 정확히는 정적리소스를 내보내는 역할을 설명한다.
> 그러기위해서는 http요청에서 uri를 분리한다는 것을 설명한다.
>> 웹서버에서는 단지 uri에 대한 정적리소스를 내보내기만 한다. 

---

웹서버는 HTTP라는 일정형식의 데이터를 주고받기위한 프로그램이다.
> HTTP는 인터넷에서 웹서버와 브라우저가 데이터를 주고 받는데 필요한 프로토콜이다.
>HTTP는 요청(request)/응답(response) 방식의 프로토콜이다.
> HTTP는 HTTP/0.9가 첫번째버전이었고, 그후 HTTP/1.0으로 대체되었고 현재는 HTTP/1.1로 정의되었다.
>> @http://www.w3.org/Protocols/HTTP/1.1/rfc2016.pdf@에서 다운로드 받을수 있다.
* HTTP요청과 HTTP응답에 대한것은 설명하지 않고 넘어간다.

웹서버(HTTP 서버)는 간단한 소켓통신으로부터 기원한다.
> 클라이언트는 socket으로 만들고, 서버는 ServerSocket 클래스로 만든다.
> socket으로 들어온 데이터를 분석하는 부분을 Request라고 하자.
>> 간단버전에서는 URI분석만을 한다. 
> 분석된 Request의 객체를 바탕으로 Response를 만들고, 형식에 맞게 되돌려준다
>> 간단버전에서는 response는 요청한 파일을 읽어서 내보낸다.
* 파일 읽고 쓰기 필요 

클라이언트 요청흐름
> 처음에 index.html을 요청하면 서버는 index.html를 보내준다.
> 클라이언트는 index.html을 분석한다. 
>> 거기에 이미지가 있으면 서버에 다시 재요청을 보내 이미지파일을 요청한다.

* URI : 작업디렉토리의 최상위를 나타내며, 항상 슬래시(/)로 시작한다.
** http://localhost:8080/index.html이면 /index.html을 나타낸다.
** (대신 was의 컨텍스트가 web일때) http://localhost:8080/web/index.html에서는 /web/index.html이 아닌 /index.html이 되겠다. 
** URL은 사실상 URI의 한 종류이다.(http://www.ietf.org/rfc/rfc2396.txt)
*** http메서드를 분석할때 나오는 것이 URI이다. 
** 통상적인말 : 인터넷자원을 지정한다. 대부분의 경우, URI는 서버의 최상위 디렉토리의 상대 경로로 나타낸다.(와~ 무슨말인지 느낌이 안온다.)